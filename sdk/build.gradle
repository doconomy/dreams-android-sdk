apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName '0.1.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'org.robolectric:robolectric:4.5-alpha-1'

    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

tasks.findAll { it.name.contains("dokka") }.forEach {
    it.configure {
        moduleName.set("Dreams")
        moduleVersion.set(android.defaultConfig.versionName)
        dokkaSourceSets {
            named("main") {
                includes.from("module.md")
                sourceLink {
                    localDirectory.set(file("src/main/java"))
                    remoteUrl.set(URL("https://github.com/getdreams/dreams-android-sdk/tree/master/sdk/"))
                    remoteLineSuffix.set("#L")
                }
                includeNonPublic.set(false)
                noAndroidSdkLink.set(false)
                reportUndocumented.set(true)
            }
        }
    }
}

task sourceJar(type: Jar) {
    archiveClassifier.set('src')
    from android.sourceSets.main.java.srcDirs
}

task javadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc
}
task htmlJar(type: Jar, dependsOn: dokkaHtml) {
    archiveClassifier.set("html-doc")
    from dokkaHtml
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.getdreams'
                artifactId = 'android-sdk'
                version = android.defaultConfig.versionName

                artifact sourceJar
                artifact javadocsJar
                artifact htmlJar

                pom {
                    name = 'Dreams Android SDK'
                    description = ''
                    url = 'https://getdreams.com/'

                    licenses {
                        license {
                            name = 'Mozilla Public License Version 2.0'
                            url = 'http://mozilla.org/MPL/2.0/'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/dreams-android-sdk.git'
                        developerConnection = 'scm:git:ssh://github.com/dreams-android-sdk.git'
                        url = 'https://getdreams.com/'
                    }
                }
            }
        }
    }
}